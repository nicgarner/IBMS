package gui.passenger;
import objects.*;
import wrapper.*;
import java.util.GregorianCalendar;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * RealTimeInfo.java
 *
 * Created on 22-Apr-2013, 11:53:23
 */

/**
 *
 * @author Adam Nogradi
 */

/**
 * Real time information interface for the passenger. User selects an area and
 * bus stop and the system returns the service information for the given stop
 * within an hour.
 */
import java.awt.Color;

public class RealTimeInfo extends javax.swing.JFrame {

    private Passenger passenger;
    private Route[] allRoutes = Route.getAllRoutes();
    private RouteCombo[] allRouteCombos = new RouteCombo[allRoutes.length];

    /** Creates new form RealTimeInfo */
    public RealTimeInfo(Passenger pass) {
        passenger = pass;
        for (int i = 0; i < allRoutes.length; i++)
        {
            allRouteCombos[i] = new RouteCombo (allRoutes[i]);
        }
        initComponents();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        backButton = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();
        stopSelectLabel = new javax.swing.JLabel();
        routeBox = new javax.swing.JComboBox();
        routeLabel = new javax.swing.JLabel();
        stopLabel = new javax.swing.JLabel();
        busStopBox = new javax.swing.JComboBox();
        infoButton = new javax.swing.JButton();
        resultPanel = new javax.swing.JPanel();
        areaScrollPane = new javax.swing.JScrollPane();
        resultTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        backButton.setText("Back to menu");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        titleLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 24));
        titleLabel.setText("Get real-time information");

        stopSelectLabel.setText("Select the area and the bus stop:");

        routeBox.setModel(new javax.swing.DefaultComboBoxModel());
        routeBox.addItem("Select...");
        for (int i = 0; i < allRoutes.length; i++)
        routeBox.addItem(allRouteCombos[i]);
        routeBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                routeBoxActionPerformed(evt);
            }
        });

        routeLabel.setFont(new java.awt.Font("DejaVu Sans", 2, 13));
        routeLabel.setText("Route:");

        stopLabel.setFont(new java.awt.Font("DejaVu Sans", 2, 13));
        stopLabel.setText("Bus stop:");

        busStopBox.setModel(new javax.swing.DefaultComboBoxModel());
        busStopBox.addItem("(Select a route...)");

        infoButton.setText("Get Info");
        infoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoButtonActionPerformed(evt);
            }
        });

        resultTextArea.setEnabled (false);
        resultTextArea.setDisabledTextColor (Color.black);
        resultTextArea.setColumns(20);
        resultTextArea.setRows(5);
        resultTextArea.setText("hello");
        areaScrollPane.setViewportView(resultTextArea);

        javax.swing.GroupLayout resultPanelLayout = new javax.swing.GroupLayout(resultPanel);
        resultPanel.setLayout(resultPanelLayout);
        resultPanelLayout.setHorizontalGroup(
            resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 286, Short.MAX_VALUE)
            .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(resultPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(areaScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        resultPanelLayout.setVerticalGroup(
            resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 242, Short.MAX_VALUE)
            .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(resultPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(areaScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backButton)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titleLabel)
                    .addComponent(stopSelectLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(routeLabel)
                            .addComponent(routeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(95, 95, 95)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(busStopBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stopLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(infoButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 171, Short.MAX_VALUE)
                .addComponent(resultPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(resultPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backButton)
                        .addGap(18, 18, 18)
                        .addComponent(titleLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(stopSelectLabel)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(routeLabel)
                            .addComponent(stopLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(routeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(busStopBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                        .addComponent(infoButton)))
                .addContainerGap())
        );

        resultPanel.setVisible(false);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-831)/2, (screenSize.height-321)/2, 831, 321);
    }// </editor-fold>

    public static String view_RT_info(BusStop stop, GregorianCalendar date,
                                      Route route)
    {
      Journey[] journeys = Timetable.getAlterTimes(stop, date, route) ;
      int stopPosition = Network.stopPositionInRoute(stop) ;

      for (int i = 0; i < journeys.length; i++)
      {
         Service curService = journeys[i].getService() ;
         //get times for current journey
         int[] altTimes = curService.getTimes() ;
      }
      return "";
    }

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        passenger.setVisible(true);
        dispose();

    }

    // User selects an area and the bus stops in that area become available
    // in the bus stop dropdown.
    private void routeBoxActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        // Obtain the selected item from the list
       Object selectedRoute =  routeBox.getSelectedItem();

        // If no item is selected, don't display any relevant bus stops
        if (selectedRoute instanceof String) {
            busStopBox.removeAllItems();
            busStopBox.addItem("(Select a route...)");
        }

        // Else display the bus stops of the selected area
        else
        {
            RouteCombo routeCombo = (RouteCombo) selectedRoute;
            Route route = routeCombo.getRoute();
            BusStop[] busStopsOnRoute = route.getStops();

            busStopBox.removeAllItems();
            //busStopsInArea = BusStopInfo.getBusStopsInArea(BusStopInfo.findAreaByName(selectedArea));           
            
                //System.out.println(busStopNamesInArea.length);
                for (int i = 0; i < busStopsOnRoute.length; i++)
                {
                //int stopID = busStopsInArea[i];
                //System.out.println(stopID);
                busStopBox.addItem(new BusStopCombo (busStopsOnRoute[i]));
                }
            
        }
    }

    private void infoButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        // Kris, insert your method call here
        resultPanel.setVisible(true);
    }


    // Variables declaration - do not modify
    private javax.swing.JComboBox routeBox;
    private javax.swing.JLabel routeLabel;
    private javax.swing.JScrollPane areaScrollPane;
    private javax.swing.JButton backButton;
    private javax.swing.JComboBox busStopBox;
    private javax.swing.JButton infoButton;
    private javax.swing.JPanel resultPanel;
    private javax.swing.JTextArea resultTextArea;
    private javax.swing.JLabel stopLabel;
    private javax.swing.JLabel stopSelectLabel;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration

}
